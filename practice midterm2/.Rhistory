geom_col()
surgery %>%
group_by(gender) %>%
filter(gender!="NA" & age!="NA") %>%
summarize(mean_age= mean(age)) %>%
ggplot(aes(x=gender, y=mean_age))+
geom_col()+
labs(title="Range of Age with Gender")
surgery %>%
group_by(gender) %>%
filter(gender!="NA" & age!="NA") %>%
summarize(mean_age= mean(age)) %>%
ggplot(aes(x=gender, y=mean_age))+
geom_col()+
labs(title="Range of Age with Gender")+
theme(plot.title=element_text(size=rel(1.5),hjust=0.5))
surgery %>%
group_by(asa_status)
surgery %>%
group_by(asa_status) %>%
ggplot(aes(asa_status))+
geom_bar()
surgery %>%
group_by(asa_status) %>%
ggplot(aes(asa_status))+
geom_bar(na.rm=T)
surgery %>%
group_by(asa_status) %>%
filter(asa_status!="NA")
ggplot(aes(asa_status))+
geom_bar()
surgery %>%
group_by(asa_status) %>%
filter(asa_status!="NA") %>%
ggplot(aes(asa_status))+
geom_bar()
surgery %>%
group_by(asa_status) %>%
filter(asa_status!="NA") %>%
ggplot(aes(asa_status))+
geom_density(fill="pink", alpha  =0.3, color = "black")+
facet_grid(.~asa_status)+
labs(title = "Distribution of Body Mass")
surgery %>%
group_by(asa_status) %>%
filter(asa_status!="NA") %>%
ggplot(aes(asa_status))+
geom_density(fill="pink", alpha  =0.3, color = "black")+
facet_grid(.~bmi)+
labs(title = "Distribution of Body Mass")
surgery %>%
group_by(asa_status) %>%
filter(asa_status!="NA") %>%
ggplot(aes(bmi))+
geom_density(fill="pink", alpha  =0.3, color = "black")+
facet_grid(.~asa_status)+
labs(title = "Distribution of Body Mass")
surgery %>%
top_n(5, ccsmort30rate & ccscomplicationrate)
surgery %>%
top_n(5, ccsmort30rate | ccscomplicationrate)
surgery %>%
top_n(5, ccsmort30rate & ccscomplicationrate)
surgery %>%
count(ccsmort30rate & ccscomplicationrate) %>%
top_n(5, ccsmort30rate & ccscomplicationrate)
surgery %>%
count(ccsmort30rate)
surgery %>%
select(ccsmort30rate, ccscomplicationrate, ahrq_ccs)
surgery %>%
select(ccsmort30rate, ccscomplicationrate, ahrq_ccs) %>%
top_n(5,ahrq_ccs)
surgery %>%
select(ccsmort30rate, ccscomplicationrate, ahrq_ccs)
library(tidyverse)
library(naniar)
library(janitor)
names(iris)
glimpse(iris)
ggplot(data=iris, #specify the data, data=iris
mapping=aes(x=Species, y=Petal.Length)) #map the aesthetics #what i want on the x is species, y is petal length
ggplot(data=iris, #specify the data
mapping=aes(x=Species, y=Petal.Length))+ #map the aesthetics
geom_boxplot() #add the plot type, so add just a boxplot
names(iris)
ggplot(data=iris, #specify the data
mapping=aes(x=Sepal.Width, y=Sepal.Length))+ #do not pipe, use plus sign
geom_point()#makes a scatter plot
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
glimpse(homerange) #have categorical variables and numerical
names(homerange)
ggplot(data=homerange, #specify the data
mapping=aes(x=log10.mass, y=log10.hra))+ #map the aesthetics #use log10 values because we may be comparing mouse to whale
geom_point() #add the plot type
ggplot(data=homerange, mapping=aes(x=log10.mass, y=log10.hra))+ #in ggplot we are not piping, we are adding layers
geom_jitter() #adds some random noise to separate dots out a bit
ggplot(data=homerange, mapping=aes(x=log10.mass, y=log10.hra))+
geom_point()+
geom_smooth(method=lm, se=T) #add a regression line with standard error
ggplot(data=homerange,
mapping=aes(x=log10.hra, y=log10.preymass))+
geom_jitter(na.rm=T)+
geom_smooth(method=lm, se=T)#ggplot excludes NA in graph but to remove the warning you can add the na.rm=T
names(homerange)
homerange %>%
count(trophic.guild) #do a count first to show people the raw data
homerange %>%
ggplot(aes(x=trophic.guild)) + #don't need x= because there is only one variable
geom_bar() #good for counts
homerange %>%
filter(family=="salmonidae") %>% #comparing a numerical data with categorical
select(common.name, log10.mass) %>%
ggplot(aes(x=common.name, y=log10.mass))+ #notice the switch in x and y, putting y first flipped the graph
geom_col()+
coord_flip()#this flips the graph too
homerange %>%
filter(family=="salmonidae") %>%
ggplot(aes(x=common.name, y=log10.mass))+
geom_bar(stat="identity") #use geom bar only for counts
homerange_mammals<- homerange %>%
filter(taxon=="mammals")
homerange %>%
filter(class=="mammalia") %>%
count(trophic.guild) %>% #this way allows you to have count, also allows you to have an X and Y
ggplot(aes(x=trophic.guild, y=n))+
geom_col()#use for when you have an X and Y
homerange_mammals %>%
ggplot(aes(x=trophic.guild)) + #don't need x= because there is only one variable
geom_bar()
homerange %>%
filter(class=="mammalia") %>%
top_n(-10, log10.mass) %>% #tells you the top 10 smallest animals
ggplot(aes(x=common.name, y=log10.mass))+
geom_col()+ #
coord_flip()
homerange %>%
filter(class=="mammalia") %>%
top_n(-10, log10.mass)
surgery %>%
select(ccsmort30rate, ahrq_ccs) %>%
arrange(desc())
surgery %>%
select(ccsmort30rate, ahrq_ccs) %>%
arrange(desc(ahrq_ccs))
surgery %>%
select(ccsmort30rate, ahrq_ccs) %>%
group_by(ahrq_ccs)
arrange(desc(ahrq_ccs))
surgery %>%
select(ccsmort30rate, ahrq_ccs) %>%
group_by(ahrq_ccs)
arrange(desc())
surgery %>%
select(ccsmort30rate, ahrq_ccs) %>%
group_by(ahrq_ccs)
arrange(desc(n))
surgery %>%
select(ccsmort30rate, ahrq_ccs) %>%
group_by(ahrq_ccs) %>%
arrange(desc(n))
surgery %>%
select(ccsmort30rate, ahrq_ccs) %>%
group_by(ahrq_ccs)
homerange %>%
filter(class=="mammalia") %>%
top_n(-10, log10.mass) %>% #tells you the top 10 smallest animals
ggplot(aes(x=common.name, y=log10.mass))+
geom_col()+ #
coord_flip()
surgery %>%
count(ahrq_ccs) %>%
arrange(desc(ccsmort30rate))
surgery %>%
count(ahrq_ccs, ccsmort30rate) %>%
arrange(desc(ccsmort30rate))
surgery %>%
count(ahrq_ccs, ccsmort30rate) %>%
arrange(desc(ccsmort30rate)) %>%
top_n(5, ccsmort30rate)
surgery %>%
count(ahrq_ccs, ccscomplicationrate) %>%
arrange(desc(ccscomplicationrate)) %>%
top_n(5, ccscomplicationrate)
surgery %>%
count(ahrq_ccs, ccsmort30rate)
surgery %>%
count(ahrq_ccs, ccsmort30rate) %>%
arrange(desc(ccsmort30rate))
surgery %>%
count(ahrq_ccs, ccsmort30rate) %>%
arrange(desc(ccsmort30rate)) %>%
top_n(5, ccsmort30rate)
surgery %>%
ggplot(aes(x=ahrq_ccs, y=ccsmort30rate))+
geom_col()
surgery %>%
ggplot(aes(x=ahrq_ccs, y=ccsmort30rate))+
geom_col()+
coord_flip()
surgery %>%
ggplot(x=mort30, y=ccscomplicationrate)+
geom_col()
surgery %>%
ggplot(x=mort30, y=ccscomplicationrate)+
geom_point()
surgery %>%
ggplot(aes(x=mort30, y=ccscomplicationrate))+
geom_point()
surgery %>%
ggplot(aes(x=mort30, y=ccscomplicationrate))+
geom_col()
surgery %>%
ggplot(aes(x=month, y=mort30))+
geom_col()
surgery %>%
ggplot(aes(x=month, y=mort30))+
geom_point()
surgery %>%
ggplot(aes(x=month, y=mort30))+
geom_col()
surgery %>%
ggplot(aes(x=month, y=mort30, fill=mort30))+
geom_col()
surgery %>%
ggplot(aes(x=month, y=mort30, fill=mort30))+
geom_boxplot()
surgery %>%
ggplot(aes(x=month, y=mort30, fill=mort30))+
geom_line()
surgery %>%
ggplot(aes(x=month, y=mort30, fill=mort30))+
geom_col()
surgery %>%
select(month, mort30, complication)
library(tidyverse)
library(janitor)
library(palmerpenguins)
options(scipen=999) #cancels the use of scientific notation for the session
homerange <-
read_csv("data/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\"))
p <- homerange %>% #store plot as an object
ggplot(aes(x= log10.mass, y= log10.hra))
p+ geom_point(size=0.75)
p+geom_point(aes(color=thermoregulation), size=1.5) #color the dots based off different thermoregulations
#for scatter plots, color is the same as fill in barplots
p+geom_point(aes(color=thermoregulation, shape=thermoregulation), size=1)#changes the shape of the different thermoregulations
homerange %>% count(taxon, sort=T)
homerange %>%
ggplot(aes(x=taxon))+
geom_bar()+
coord_flip()+
labs(title="Observations by Taxon",
x="Taxonomic Group")
homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+ #can fill by different variables
geom_bar()+
coord_flip()+
labs(title="Observations by Taxon",
x="Taxonomic Group")
surgery %>%
ggplot(aes(x=month, y=mort30, fill=complication))+
geom_col()
surgery %>%
ggplot(aes(x=month, y=mort30, fill=complication))+
geom_col()+
coord_flip()
surgery %>%
ggplot(aes(x=month, y=mort30, fill=complication))+
geom_col()+
coord_boxplot()
surgery %>%
ggplot(aes(x=month, y=mort30, fill=complication))+
geom_boxplot()+
coord_flip()
surgery %>%
ggplot(aes(x=month, y=mort30, fill=complication))+
geom_point()+
coord_flip()
surgery %>%
ggplot(aes(x=month, y=mort30, fill=complication))+
geom_bar()+
coord_flip()
surgery %>%
ggplot(aes(x=month, y=mort30, fill=complication))+
geom_col()+
coord_flip()
surgery %>%
ggplot(aes(x=month, y=mort30, fill=complication))+
geom_col(position="dodge")+
coord_flip()
surgery %>%
ggplot(aes(x=month, y=mort30, fill=complication))+
geom_col(position="dodge")
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("janitor")
library("naniar")
surgery <- read_csv("data/surgery.csv")
surgery_new %>%
ggplot(aes(x=month, y=n_deaths))+
geom_col(alpha=0.8, fill="steelblue", color="black")+
labs(title="30-Day Mortality by Month",
x=NULL,
y="Rate")+
scale_x_discrete(limits=c("Jan","Feb","Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))+
theme_light()
surgery_new <- surgery %>%
mutate(mort30_n = ifelse(mort30 == "Yes", 1, 0),
complication_n = ifelse(complication =="Yes", 1, 0)) %>%
group_by(month) %>%
summarise(n_deaths=sum(mort30_n),
n_comp=sum(complication_n))
surgery_new
surgery %>% tabyl(month, mort30)
surgery %>% tabyl(month, complication)
surgery_new %>%
ggplot(aes(x=month, y=n_deaths))+
geom_col(alpha=0.8, fill="steelblue", color="black")+
labs(title="30-Day Mortality by Month",
x=NULL,
y="Rate")+
scale_x_discrete(limits=c("Jan","Feb","Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))+
theme_light()
knitr::opts_chunk$set(echo = TRUE)
penguins %>%
group_by(island, species) %>%
summarize(n_penguins=n(), .groups = 'keep')
penguins %>%
group_by(island, species) %>%
summarize(n_penguins=n()
penguins %>%
library("tidyverse")
library("skimr")
library("janitor")
library("palmerpenguins")
?penguins
penguins %>%
group_by(island) %>%
summarize(mean_body_mass_g=mean(body_mass_g, na.rm=T)) # remember to remove those NA's!
penguins %>%
group_by(island, species) %>%
summarize(n_penguins=n(), .groups = 'keep')
penguins %>%
count(island, species)
penguins %>%
tabyl(island, species)
penguins %>%
summarise_all(n_distinct)
penguins %>%
summarize(across(!c(species, island, sex, year),
mean, na.rm=T))
penguins %>%
summarise(across(starts_with("bill"), n_distinct))
penguins %>%
summarise(across(starts_with("bill")
names(penguins)
#install.packages("naniar")
library("tidyverse")
library("naniar")
library("skimr")
library("janitor")
life_history <- read_csv("data/mammal_lifehistories_v3.csv") %>% clean_names()
glimpse(life_history)
summary(life_history)
life_history %>%
map_df(~ sum(is.na(.)))
life_history <- read_csv("data/mammal_lifehistories_v3.csv", na=c("NA", " ", ".", "-999", "-999", "not measured")) %>% clean_names() #we already knew what the NA looked like, you need to know how the na's are represented in the data
#you don't want to do this by default
naniar::miss_var_summary(life_history)#give me a simple life history data, shows us that about 72% of the data are missing for wean mass
hist(life_history$max_life)
life_history <-
life_history %>%
mutate(max_life=na_if(max_life, 0)) #there are zeros in the max life data that are used as NA
miss_var_summary(life_history)
life_history %>%
group_by(order) %>%# within the order where are the nas and what are the order
select(order, wean_mass) %>%
miss_var_summary(order=T) #we see that we have a whole bunch of missing data for artiodactyla
life_history %>%
replace_with_na(replace = list(newborn = "not measured", #remove "not measured in newborn
weaning= -999, #remove -999 in weaning
wean_mass= -999,
afr= -999,
max_life= 0,
litter_size= -999,
gestation= -999,
mass= -999)) %>%
miss_var_summary()
cites <- read_csv("data/cites.csv") %>% clean_names()
naniar::miss_var_summary(cites)
cites %>%
group_by(class) %>%
select(class, exporter_reported_quantity) %>%
miss_var_summary() %>%
arrange(desc(pct_miss))#100% of data missing for sea cucumbers
miss_var_summary(life_history_advance)
#install.packages("naniar")
library("tidyverse")
library("naniar")
library("skimr")
library("janitor")
life_history <- read_csv("data/mammal_lifehistories_v3.csv") %>% clean_names()
glimpse(life_history)
summary(life_history)
life_history %>%
map_df(~ sum(is.na(.)))
life_history <- read_csv("data/mammal_lifehistories_v3.csv", na=c("NA", " ", ".", "-999", "-999", "not measured")) %>% clean_names() #we already knew what the NA looked like, you need to know how the na's are represented in the data
#you don't want to do this by default
naniar::miss_var_summary(life_history)#give me a simple life history data, shows us that about 72% of the data are missing for wean mass
hist(life_history$max_life)
life_history <-
life_history %>%
mutate(max_life=na_if(max_life, 0)) #there are zeros in the max life data that are used as NA
miss_var_summary(life_history)
life_history %>%
group_by(order) %>%# within the order where are the nas and what are the order
select(order, wean_mass) %>%
miss_var_summary(order=T) #we see that we have a whole bunch of missing data for artiodactyla
life_history %>%
replace_with_na(replace = list(newborn = "not measured", #remove "not measured in newborn
weaning= -999, #remove -999 in weaning
wean_mass= -999,
afr= -999,
max_life= 0,
litter_size= -999,
gestation= -999,
mass= -999)) %>%
miss_var_summary()
cites <- read_csv("data/cites.csv") %>% clean_names()
naniar::miss_var_summary(cites)
cites %>%
group_by(class) %>%
select(class, exporter_reported_quantity) %>%
miss_var_summary() %>%
arrange(desc(pct_miss))#100% of data missing for sea cucumbers
library(visdat)
vis_dat(life_history) #classes of data
vis_miss(life_history) #looking at just the missing parts of life history
life_history_advance <-
readr::read_csv(file = "data/mammal_lifehistories_v3.csv",
na = c("NA", " ", ".", "-999")) #all NA, blank spaces, .,and -999 are treated as NA
miss_var_summary(life_history_advance)
library(tidyverse)
heartrate <- read_csv("data/heartrate.csv")
heartrate
heartrate %>%
pivot_longer(-patient, #patient will not move
names_to = "drug", #make a new column called "drug"
values_to="heartrate" #values moved to a new column called "heartrate"
)
library(tidyverse)
heartrate <- read_csv("data/heartrate.csv")
heartrate
heartrate %>%
pivot_longer(-patient, #patient will not move
names_to = "drug", #make a new column called "drug"
values_to="heartrate" #values moved to a new column called "heartrate"
)
relig_income <- read_csv("data/relig_income.csv") #read.csv is not part of tidyverse, old way of importing data that doesn't import data correctly
relig_income %>%
pivot_longer(-religion, #religion will not move
names_to = "income", #make a new column called "income"
values_to="total" #values moved to a new column called "total"
)
library(tidyverse)
heartrate <- read_csv("data/heartrate.csv")
heartrate
heartrate %>%
pivot_longer(-patient, #patient will not move
names_to = "drug", #make a new column called "drug"
values_to="heartrate" #values moved to a new column called "heartrate"
)
relig_income <- read_csv("data/relig_income.csv") #read.csv is not part of tidyverse, old way of importing data that doesn't import data correctly
relig_income %>%
pivot_longer(-religion, #religion will not move
names_to = "income", #make a new column called "income"
values_to="total" #values moved to a new column called "total"
)
billboard <- read_csv("data/billboard.csv")
billboard
billboard2 <-
billboard %>%
pivot_longer(wk1:wk76, # a range of columns from wk1 to wk76
names_to = "week",
values_to = "rank",
values_drop_na = TRUE #this will drop the NA's
)
billboard2
billboard3 <-
billboard %>%
pivot_longer(-c(artist, track, date.entered), #specific columns to stay fixed, so don't move these
names_to = "week",
values_to = "rank",
values_drop_na = TRUE
)
billboard3 #produces same result
billboard %>%
pivot_longer(
cols = starts_with("wk"), #columns that start with "wk"
names_to = "week",
names_prefix = "wk",
values_to = "rank",
values_drop_na = TRUE)
plant_data <- read_csv("data/plant_data.csv")
#It is not tidy because the columns are obersvations
plant_data %>%
pivot_longer(-c(genotype, water_sched_prog, greenhouse),
names_to = "days",
values_to = "values",
values_drop_na = T)
View(plant_data)
