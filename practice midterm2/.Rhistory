surgery_new <- surgery %>%
mutate(mort30_n = ifelse(mort30 == "Yes", 1, 0),
complication_n = ifelse(complication =="Yes", 1, 0)) %>%
group_by(month) %>%
summarise(n_deaths=sum(mort30_n),
n_comp=sum(complication_n))
surgery_new
surgery %>% tabyl(month, mort30)
surgery %>% tabyl(month, complication)
surgery_new %>%
ggplot(aes(x=month, y=n_deaths))+
geom_col(alpha=0.8, fill="steelblue", color="black")+
labs(title="30-Day Mortality by Month",
x=NULL,
y="Rate")+
scale_x_discrete(limits=c("Jan","Feb","Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))+
theme_light()
knitr::opts_chunk$set(echo = TRUE)
penguins %>%
group_by(island, species) %>%
summarize(n_penguins=n(), .groups = 'keep')
penguins %>%
group_by(island, species) %>%
summarize(n_penguins=n()
penguins %>%
library("tidyverse")
library("skimr")
library("janitor")
library("palmerpenguins")
?penguins
penguins %>%
group_by(island) %>%
summarize(mean_body_mass_g=mean(body_mass_g, na.rm=T)) # remember to remove those NA's!
penguins %>%
group_by(island, species) %>%
summarize(n_penguins=n(), .groups = 'keep')
penguins %>%
count(island, species)
penguins %>%
tabyl(island, species)
penguins %>%
summarise_all(n_distinct)
penguins %>%
summarize(across(!c(species, island, sex, year),
mean, na.rm=T))
penguins %>%
summarise(across(starts_with("bill"), n_distinct))
penguins %>%
summarise(across(starts_with("bill")
names(penguins)
#install.packages("naniar")
library("tidyverse")
library("naniar")
library("skimr")
library("janitor")
life_history <- read_csv("data/mammal_lifehistories_v3.csv") %>% clean_names()
glimpse(life_history)
summary(life_history)
life_history %>%
map_df(~ sum(is.na(.)))
life_history <- read_csv("data/mammal_lifehistories_v3.csv", na=c("NA", " ", ".", "-999", "-999", "not measured")) %>% clean_names() #we already knew what the NA looked like, you need to know how the na's are represented in the data
#you don't want to do this by default
naniar::miss_var_summary(life_history)#give me a simple life history data, shows us that about 72% of the data are missing for wean mass
hist(life_history$max_life)
life_history <-
life_history %>%
mutate(max_life=na_if(max_life, 0)) #there are zeros in the max life data that are used as NA
miss_var_summary(life_history)
life_history %>%
group_by(order) %>%# within the order where are the nas and what are the order
select(order, wean_mass) %>%
miss_var_summary(order=T) #we see that we have a whole bunch of missing data for artiodactyla
life_history %>%
replace_with_na(replace = list(newborn = "not measured", #remove "not measured in newborn
weaning= -999, #remove -999 in weaning
wean_mass= -999,
afr= -999,
max_life= 0,
litter_size= -999,
gestation= -999,
mass= -999)) %>%
miss_var_summary()
cites <- read_csv("data/cites.csv") %>% clean_names()
naniar::miss_var_summary(cites)
cites %>%
group_by(class) %>%
select(class, exporter_reported_quantity) %>%
miss_var_summary() %>%
arrange(desc(pct_miss))#100% of data missing for sea cucumbers
miss_var_summary(life_history_advance)
#install.packages("naniar")
library("tidyverse")
library("naniar")
library("skimr")
library("janitor")
life_history <- read_csv("data/mammal_lifehistories_v3.csv") %>% clean_names()
glimpse(life_history)
summary(life_history)
life_history %>%
map_df(~ sum(is.na(.)))
life_history <- read_csv("data/mammal_lifehistories_v3.csv", na=c("NA", " ", ".", "-999", "-999", "not measured")) %>% clean_names() #we already knew what the NA looked like, you need to know how the na's are represented in the data
#you don't want to do this by default
naniar::miss_var_summary(life_history)#give me a simple life history data, shows us that about 72% of the data are missing for wean mass
hist(life_history$max_life)
life_history <-
life_history %>%
mutate(max_life=na_if(max_life, 0)) #there are zeros in the max life data that are used as NA
miss_var_summary(life_history)
life_history %>%
group_by(order) %>%# within the order where are the nas and what are the order
select(order, wean_mass) %>%
miss_var_summary(order=T) #we see that we have a whole bunch of missing data for artiodactyla
life_history %>%
replace_with_na(replace = list(newborn = "not measured", #remove "not measured in newborn
weaning= -999, #remove -999 in weaning
wean_mass= -999,
afr= -999,
max_life= 0,
litter_size= -999,
gestation= -999,
mass= -999)) %>%
miss_var_summary()
cites <- read_csv("data/cites.csv") %>% clean_names()
naniar::miss_var_summary(cites)
cites %>%
group_by(class) %>%
select(class, exporter_reported_quantity) %>%
miss_var_summary() %>%
arrange(desc(pct_miss))#100% of data missing for sea cucumbers
library(visdat)
vis_dat(life_history) #classes of data
vis_miss(life_history) #looking at just the missing parts of life history
life_history_advance <-
readr::read_csv(file = "data/mammal_lifehistories_v3.csv",
na = c("NA", " ", ".", "-999")) #all NA, blank spaces, .,and -999 are treated as NA
miss_var_summary(life_history_advance)
library(tidyverse)
heartrate <- read_csv("data/heartrate.csv")
heartrate
heartrate %>%
pivot_longer(-patient, #patient will not move
names_to = "drug", #make a new column called "drug"
values_to="heartrate" #values moved to a new column called "heartrate"
)
library(tidyverse)
heartrate <- read_csv("data/heartrate.csv")
heartrate
heartrate %>%
pivot_longer(-patient, #patient will not move
names_to = "drug", #make a new column called "drug"
values_to="heartrate" #values moved to a new column called "heartrate"
)
relig_income <- read_csv("data/relig_income.csv") #read.csv is not part of tidyverse, old way of importing data that doesn't import data correctly
relig_income %>%
pivot_longer(-religion, #religion will not move
names_to = "income", #make a new column called "income"
values_to="total" #values moved to a new column called "total"
)
library(tidyverse)
heartrate <- read_csv("data/heartrate.csv")
heartrate
heartrate %>%
pivot_longer(-patient, #patient will not move
names_to = "drug", #make a new column called "drug"
values_to="heartrate" #values moved to a new column called "heartrate"
)
relig_income <- read_csv("data/relig_income.csv") #read.csv is not part of tidyverse, old way of importing data that doesn't import data correctly
relig_income %>%
pivot_longer(-religion, #religion will not move
names_to = "income", #make a new column called "income"
values_to="total" #values moved to a new column called "total"
)
billboard <- read_csv("data/billboard.csv")
billboard
billboard2 <-
billboard %>%
pivot_longer(wk1:wk76, # a range of columns from wk1 to wk76
names_to = "week",
values_to = "rank",
values_drop_na = TRUE #this will drop the NA's
)
billboard2
billboard3 <-
billboard %>%
pivot_longer(-c(artist, track, date.entered), #specific columns to stay fixed, so don't move these
names_to = "week",
values_to = "rank",
values_drop_na = TRUE
)
billboard3 #produces same result
billboard %>%
pivot_longer(
cols = starts_with("wk"), #columns that start with "wk"
names_to = "week",
names_prefix = "wk",
values_to = "rank",
values_drop_na = TRUE)
plant_data <- read_csv("data/plant_data.csv")
#It is not tidy because the columns are obersvations
plant_data %>%
pivot_longer(-c(genotype, water_sched_prog, greenhouse),
names_to = "days",
values_to = "values",
values_drop_na = T)
View(plant_data)
homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+ #can fill by different variables
geom_bar(position="dodge")+ #use position=dodge so the bars are side by side and not stacked on top of each other
coord_flip()+
labs(title="Observations by Taxon",
x="Taxonomic Group")
library(tidyverse)
library(janitor)
library(palmerpenguins)
options(scipen=999) #cancels the use of scientific notation for the session
homerange <-
read_csv("data/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\"))
p <- homerange %>% #store plot as an object
ggplot(aes(x= log10.mass, y= log10.hra))
p+ geom_point(size=0.75)
p+geom_point(aes(color=thermoregulation), size=1.5) #color the dots based off different thermoregulations
#for scatter plots, color is the same as fill in barplots
p+geom_point(aes(color=thermoregulation, shape=thermoregulation), size=1)#changes the shape of the different thermoregulations
homerange %>% count(taxon, sort=T)
homerange %>%
ggplot(aes(x=taxon))+
geom_bar()+
coord_flip()+
labs(title="Observations by Taxon",
x="Taxonomic Group")
homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+ #can fill by different variables
geom_bar()+
coord_flip()+
labs(title="Observations by Taxon",
x="Taxonomic Group")
homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+ #can fill by different variables
geom_bar(position="dodge")+ #use position=dodge so the bars are side by side and not stacked on top of each other
coord_flip()+
labs(title="Observations by Taxon",
x="Taxonomic Group")
homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+ #can fill by different variables
geom_bar(position="dodge")+ #use position=dodge so the bars are side by side and not stacked on top of each other
theme(axis.text.x=element_text(angle=45, hjust=1))+ #made the x axis text at an angle
labs(title="Observations by Taxon",
x="Taxonomic Group")
homerange %>%
ggplot(aes(x = taxon, fill = trophic.guild))+
geom_bar(position = position_fill())+
scale_y_continuous(labels = scales::percent)+ #scaling everything to a percentage
coord_flip()
penguins %>%
ggplot(aes(x=island, fill=species))+
geom_bar()+
labs(title="Counts of Individuals per Island",
x="Island",
fill="Species")
penguins %>%
filter(sex!="NA") %>% #this removes NA from sex
ggplot(aes(x=island, fill=sex))+
geom_bar(position="dodge")+
labs(title="Counts of Individuals per Island",
x="Island",
fill="Species")
homerange %>%
ggplot(aes(x = class, y = log10.mass)) +
geom_boxplot()
homerange %>%
ggplot(aes(x = class, y = log10.mass, group = taxon)) + #use group to make indivodual box plots for each different axanomic group, cool but not hwlpful because we dont know what each box plot are, so use fill
geom_boxplot()
homerange %>%
ggplot(aes(x=class, y=log10.mass))+
geom_boxplot()+
coord_flip() #simple boxplot of mass vs. 10 mass
deserts %>%
filter(species_id=="DM" | species_id=="DF") %>%
mutate(year=as.factor(year)) %>% #if you leave year as a numerical, R thinks you are going to do math with it, you don't add years
group_by(year, species_id) %>%
summarize(n=n(), .groups = "keep") %>%
pivot_wider(names_from=species_id, values_from = n)#makes the table more appealing and easier to understand
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
options(scipen=999) #cancels the use of scientific notation for the session
deserts <- read_csv("data/surveys_complete.csv")
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\"))
homerange %>%
ggplot(aes(x=class, y=log10.mass))+
geom_boxplot()+
coord_flip() #simple boxplot of mass vs. 10 mass
homerange %>%
ggplot(aes(x=class, y=log10.mass, fill=class))+
geom_boxplot()+
coord_flip() #filled by class to add color codes
homerange %>%
ggplot(aes(x=class, y=log10.mass, group=taxon))+ #use group to group the taxon
geom_boxplot()+
coord_flip() #group by taxon but it will not color code
homerange %>%
ggplot(aes(x=class, y=log10.mass, fill=taxon))+
geom_boxplot()+
coord_flip()
deserts %>%
filter(species_id=="DM" | species_id=="DF") %>%
mutate(year=as.factor(year)) %>% #if you leave year as a numerical, R thinks you are going to do math with it, you don't add years
group_by(year, species_id) %>%
summarize(n=n(), .groups = "keep") %>%
pivot_wider(names_from=species_id, values_from = n)#makes the table more appealing and easier to understand
deserts %>%
filter(species_id=="DM" | species_id=="DF") %>%
mutate(year=as.factor(year)) %>% #if you leave year as a numerical, R thinks you are going to do math with it, you don't add years
group_by(year, species_id) %>%
summarize(n=n(), .groups = "keep") %>%
pivot_wider(names_from=species_id, values_from = n)#makes the table more appealing and easier to understand
deserts %>%
filter(species_id=="DM" | species_id=="DS") %>%
mutate(year=as.factor(year)) %>% #if you leave year as a numerical, R thinks you are going to do math with it, you don't add years
group_by(year, species_id)
deserts %>%
filter(species_id=="DM" | species_id=="DS") %>%
mutate(year=as.factor(year)) %>% #if you leave year as a numerical, R thinks you are going to do math with it, you don't add years
group_by(year, species_id) %>%
summarize(n=n(), .groups = "keep")
homerange %>%
mutate(mass_category=case_when(log10.mass<=1.75~"small",
log10.mass>1.75 & log10.mass<=2.75 ~"medium",
log10.mass>2.75~"large")) #is going to be on midterm 2 to make categories
summary(log10.hra)
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
options(scipen=999) #cancels the use of scientific notation for the session
deserts <- read_csv("data/surveys_complete.csv")
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\"))
homerange %>%
ggplot(aes(x=class, y=log10.mass))+
geom_boxplot()+
coord_flip() #simple boxplot of mass vs. 10 mass
homerange %>%
ggplot(aes(x=class, y=log10.mass, fill=class))+
geom_boxplot()+
coord_flip() #filled by class to add color codes
homerange %>%
ggplot(aes(x=class, y=log10.mass, group=taxon))+ #use group to group the taxon
geom_boxplot()+
coord_flip() #group by taxon but it will not color code
homerange %>%
ggplot(aes(x=class, y=log10.mass, fill=taxon))+
geom_boxplot()+
coord_flip()
deserts %>%
filter(species_id=="DM" | species_id=="DF") %>%
mutate(year=as.factor(year)) %>% #if you leave year as a numerical, R thinks you are going to do math with it, you don't add years
group_by(year, species_id) %>%
summarize(n=n(), .groups = "keep") %>%
pivot_wider(names_from=species_id, values_from = n)#makes the table more appealing and easier to understand
deserts %>%
filter(species_id=="DM" | species_id=="DS") %>%
mutate(year=as.factor(year)) %>% #if you leave year as a numerical, R thinks you are going to do math with it, you don't add years
group_by(year, species_id) %>%
summarize(n=n(), .groups = "keep") %>%
ggplot(aes(x=year, y=n, group=species_id, color=species_id))+
geom_line()+
geom_point(shape=2)+
theme(axis.text.x=element_text(angle=60, hjust=1))+ #hjust separtes it from the x axis
labs(title="Number of Samples for Species DM & DS",
x="year",
y="n")
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram(bins=20)+ #we can adjust the number of bins with the bins argument, can adjust the bin size bin=20 makes it wider
labs(title = "Distribution of Body Mass")
grDevices::colors()#built in colors
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram(color = "rosybrown2", fill = "lavenderblush1", bins=10)+
labs(title = "Distribution of Body Mass") #color =outline and fill =in the rectangle
homerange %>%
ggplot(aes(x = log10.mass)) + #density is a probability distribution, show to distribution of continous variables very well
geom_density(fill="deepskyblue4", alpha  =0.3, color = "black")+ #alpha is the transparency, alpha creates transparency
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x=log10.mass)) + #plots are built in layers
geom_histogram(aes(y = after_stat(density)), fill = "deepskyblue4", alpha = 0.4, color = "black")+
geom_density(color = "red")+
labs(title = "Distribution of Body Mass")#have histogram with density plot overlays
homerange %>%
ggplot(aes(x=log10.hra))+ #only need to specify x
geom_histogram(color="black", fill="violetred4", alpha=0.3)+
labs(title="Distribution of Homerange")
homerange %>%
ggplot(aes(x=log10.hra))+ #only need to specify x
geom_density(color="black", fill="violetred4", alpha=0.3)+
labs(title="Distribution of Homerange")
homerange %>%
ggplot(aes(x=log10.hra))+
geom_histogram(aes(y=after_stat(density)), fill="violetred4", alpha=0.4, color="black")+
geom_density(color="orange")+
labs(title="Distribution of Homerange") #use same color in the same report always, so it is easier to understand
glimpse(homerange)
homerange %>%
select(log10.mass) %>%
summarize(min=min(log10.mass),#how to make data categorical
max=max(log10.mass))
summary(homerange$log10.mass)
homerange %>%
mutate(mass_category=case_when(log10.mass<=1.75~"small",
log10.mass>1.75 & log10.mass<=2.75 ~"medium",
log10.mass>2.75~"large")) #is going to be on midterm 2 to make categories
homerange %>%
mutate(mass_category=case_when(log10.mass<=1.75~"small",
log10.mass>1.75 & log10.mass<=2.75 ~"medium",
log10.mass>2.75~"large")) %>%
ggplot(aes(x=mass_category, fill=trophic.guild))+
geom_bar(position="dodge")
summary(log10.hra)
quartiles <- quantcut(homerange$log10.hra)
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
options(scipen=999) #cancels the use of scientific notation for the session
deserts <- read_csv("data/surveys_complete.csv")
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\"))
homerange %>%
ggplot(aes(x=class, y=log10.mass))+
geom_boxplot()+
coord_flip() #simple boxplot of mass vs. 10 mass
homerange %>%
ggplot(aes(x=class, y=log10.mass, fill=class))+
geom_boxplot()+
coord_flip() #filled by class to add color codes
homerange %>%
ggplot(aes(x=class, y=log10.mass, group=taxon))+ #use group to group the taxon
geom_boxplot()+
coord_flip() #group by taxon but it will not color code
homerange %>%
ggplot(aes(x=class, y=log10.mass, fill=taxon))+
geom_boxplot()+
coord_flip()
deserts %>%
filter(species_id=="DM" | species_id=="DF") %>%
mutate(year=as.factor(year)) %>% #if you leave year as a numerical, R thinks you are going to do math with it, you don't add years
group_by(year, species_id) %>%
summarize(n=n(), .groups = "keep") %>%
pivot_wider(names_from=species_id, values_from = n)#makes the table more appealing and easier to understand
deserts %>%
filter(species_id=="DM" | species_id=="DS") %>%
mutate(year=as.factor(year)) %>% #if you leave year as a numerical, R thinks you are going to do math with it, you don't add years
group_by(year, species_id) %>%
summarize(n=n(), .groups = "keep") %>%
ggplot(aes(x=year, y=n, group=species_id, color=species_id))+
geom_line()+
geom_point(shape=2)+
theme(axis.text.x=element_text(angle=60, hjust=1))+ #hjust separtes it from the x axis
labs(title="Number of Samples for Species DM & DS",
x="year",
y="n")
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram(bins=20)+ #we can adjust the number of bins with the bins argument, can adjust the bin size bin=20 makes it wider
labs(title = "Distribution of Body Mass")
grDevices::colors()#built in colors
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram(color = "rosybrown2", fill = "lavenderblush1", bins=10)+
labs(title = "Distribution of Body Mass") #color =outline and fill =in the rectangle
homerange %>%
ggplot(aes(x = log10.mass)) + #density is a probability distribution, show to distribution of continous variables very well
geom_density(fill="deepskyblue4", alpha  =0.3, color = "black")+ #alpha is the transparency, alpha creates transparency
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x=log10.mass)) + #plots are built in layers
geom_histogram(aes(y = after_stat(density)), fill = "deepskyblue4", alpha = 0.4, color = "black")+
geom_density(color = "red")+
labs(title = "Distribution of Body Mass")#have histogram with density plot overlays
homerange %>%
ggplot(aes(x=log10.hra))+ #only need to specify x
geom_histogram(color="black", fill="violetred4", alpha=0.3)+
labs(title="Distribution of Homerange")
homerange %>%
ggplot(aes(x=log10.hra))+ #only need to specify x
geom_density(color="black", fill="violetred4", alpha=0.3)+
labs(title="Distribution of Homerange")
homerange %>%
ggplot(aes(x=log10.hra))+
geom_histogram(aes(y=after_stat(density)), fill="violetred4", alpha=0.4, color="black")+
geom_density(color="orange")+
labs(title="Distribution of Homerange") #use same color in the same report always, so it is easier to understand
glimpse(homerange)
homerange %>%
select(log10.mass) %>%
summarize(min=min(log10.mass),#how to make data categorical
max=max(log10.mass))
summary(homerange$log10.mass)
homerange %>%
mutate(mass_category=case_when(log10.mass<=1.75~"small",
log10.mass>1.75 & log10.mass<=2.75 ~"medium",
log10.mass>2.75~"large")) #is going to be on midterm 2 to make categories
homerange %>%
mutate(mass_category=case_when(log10.mass<=1.75~"small",
log10.mass>1.75 & log10.mass<=2.75 ~"medium",
log10.mass>2.75~"large")) %>%
ggplot(aes(x=mass_category, fill=trophic.guild))+
geom_bar(position="dodge")
summary(log10.hra)
q+theme_minimal()
q+theme_classic()
