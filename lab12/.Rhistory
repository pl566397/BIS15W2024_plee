group_by(continent) %>%
summarize(min_life_expectancy=min(lifeExp),
mean_life_expectancy=mean(lifeExp),
max_life_expectancy=max(lifeExp)) %>%
ggplot(aes(x=year, y=mean_life_expectancy))+
geom_point()
gapminder %>%
filter(year %in% 1952:2007) %>%
group_by(continent) %>%
ggplot(aes(x=year, y=lifeExp))+
geom_point()
gapminder %>%
filter(year %in% 1952:2007) %>%
group_by(continent) %>%
ggplot(aes(x=year, y=lifeExp))+
geom_bar()
gapminder %>%
filter(year %in% 1952:2007) %>%
group_by(continent) %>%
ggplot(aes(x=year, y=lifeExp))+
geom_col()
gapminder %>%
filter(year %in% 1952:2007) %>%
group_by(continent) %>%
ggplot(aes(x=year, y=lifeExp, fill=continent))+
geom_col()
gapminder %>%
ggplot(aes(x=gdpPercap, y=lifeExp))+
geom_col()
gapminder %>%
ggplot(aes(x=gdpPercap, y=lifeExp, log10()))+
geom_col()
gapminder %>%
ggplot(aes(x=gdpPercap, y=lifeExp, log10()))+
geom_point()
gapminder %>%
ggplot(aes(x=gdpPercap, y=log10(lifeExp))+
geom_point()
gapminder %>%
ggplot(aes(x=gdpPercap, y=log10(lifeExp))+
geom_point()
gapminder %>%
ggplot(aes(x=gdpPercap, y=log10(lifeExp)))+
geom_point()
gapminder %>%
ggplot(aes(x=gdpPercap, y=lifeExp))+
geom_point(log10())
gapminder %>%
ggplot(aes(x=gdpPercap, y=lifeExp, alpha=0.2))+
geom_point()
gapminder %>%
ggplot(aes(x=gdpPercap, y=lifeExp, fill=gdpPercap))+
geom_point()
names(gapminder)
gapminder %>%
filter(year>1952) %>%
ggplot(aes(x=year, y=pop))+
geom_col()
gapminder %>%
filter(year>1952) %>%
group_by(country) %>%
ggplot(aes(x=year, y=pop))+
geom_col()
gapminder %>%
filter(year>1952) %>%
group_by(country) %>%
ggplot(aes(x=year, y=pop, fill=country))+
geom_col()
gapminder %>%
filter(year>1952) %>%
group_by(country) %>%
ggplot(aes(x=year, y=pop, color=country))+
geom_col()
gapminder %>%
filter(year>1952) %>%
group_by(country) %>%
ggplot(aes(x=year, y=pop, fill=country))+
geom_col()
gapminder %>%
filter(year>1952) %>%
group_by(country) %>%
ggplot(aes(x=year, y=pop))+
geom_col()
gapminder %>%
filter(year>1952) %>%
group_by(country) %>%
ggplot(aes(x=country, y=pop))+
geom_col()
gapminder %>%
filter(year>1952) %>%
group_by(country) %>%
ggplot(aes(x=country, y=pop))+
geom_col()+
coord_flip()
gapminder %>%
filter(year>1952) %>%
group_by(country) %>%
ggplot(aes(x=country, y=pop))+
geom_col()+
theme(axis.text.x=element_text(angle=60, hjust=1)+
coord_flip()
gapminder %>%
filter(year>1952) %>%
group_by(country) %>%
ggplot(aes(x=country, y=pop))+
geom_col()+
theme(axis.text.x=element_text(angle=60, hjust=1))+
coord_flip()
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
options(scipen=999) #cancels the use of scientific notation for the session
deserts <- read_csv("data/surveys_complete.csv")
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\"))
homerange %>%
ggplot(aes(x=class, y=log10.mass))+
geom_boxplot()+
coord_flip() #simple boxplot of mass vs. 10 mass
homerange %>%
ggplot(aes(x=class, y=log10.mass, fill=class))+
geom_boxplot()+
coord_flip() #filled by class to add color codes
homerange %>%
ggplot(aes(x=class, y=log10.mass, group=taxon))+ #use group to group the taxon
geom_boxplot()+
coord_flip() #group by taxon but it will not color code
homerange %>%
ggplot(aes(x=class, y=log10.mass, fill=taxon))+
geom_boxplot()+
coord_flip()
deserts %>%
filter(species_id=="DM" | species_id=="DF") %>%
mutate(year=as.factor(year)) %>% #if you leave year as a numerical, R thinks you are going to do math with it, you don't add years
group_by(year, species_id) %>%
summarize(n=n(), .groups = "keep") %>%
pivot_wider(names_from=species_id, values_from = n)#makes the table more appealing and easier to understand
deserts %>%
filter(species_id=="DM" | species_id=="DS") %>%
mutate(year=as.factor(year)) %>% #if you leave year as a numerical, R thinks you are going to do math with it, you don't add years
group_by(year, species_id) %>%
summarize(n=n(), .groups = "keep") %>%
ggplot(aes(x=year, y=n, group=species_id, color=species_id))+
geom_line()+
geom_point(shape=2)+
theme(axis.text.x=element_text(angle=60, hjust=1))+ #hjust separtes it from the x axis
labs(title="Number of Samples for Species DM & DS",
x="year",
y="n")
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram(bins=20)+ #we can adjust the number of bins with the bins argument, can adjust the bin size bin=20 makes it wider
labs(title = "Distribution of Body Mass")
grDevices::colors()#built in colors
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram(color = "rosybrown2", fill = "lavenderblush1", bins=10)+
labs(title = "Distribution of Body Mass") #color =outline and fill =in the rectangle
homerange %>%
ggplot(aes(x = log10.mass)) + #density is a probability distribution, show to distribution of continous variables very well
geom_density(fill="deepskyblue4", alpha  =0.3, color = "black")+ #alpha is the transparency, alpha creates transparency
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x=log10.mass)) + #plots are built in layers
geom_histogram(aes(y = after_stat(density)), fill = "deepskyblue4", alpha = 0.4, color = "black")+
geom_density(color = "red")+
labs(title = "Distribution of Body Mass")#have histogram with density plot overlays
homerange %>%
ggplot(aes(x=log10.hra))+ #only need to specify x
geom_histogram(color="black", fill="violetred4", alpha=0.3)+
labs(title="Distribution of Homerange")
homerange %>%
ggplot(aes(x=log10.hra))+ #only need to specify x
geom_density(color="black", fill="violetred4", alpha=0.3)+
labs(title="Distribution of Homerange")
homerange %>%
ggplot(aes(x=log10.hra))+
geom_histogram(aes(y=after_stat(density)), fill="violetred4", alpha=0.4, color="black")+
geom_density(color="orange")+
labs(title="Distribution of Homerange") #use same color in the same report always, so it is easier to understand
glimpse(homerange)
homerange %>%
select(log10.mass) %>%
summarize(min=min(log10.mass),#how to make data categorical
max=max(log10.mass))
summary(homerange$log10.mass)
homerange %>%
mutate(mass_category=case_when(log10.mass<=1.75~"small",
log10.mass>1.75 & log10.mass<=2.75 ~"medium",
log10.mass>2.75~"large")) #is going to be on midterm 2 to make categories
homerange %>%
mutate(mass_category=case_when(log10.mass<=1.75~"small",
log10.mass>1.75 & log10.mass<=2.75 ~"medium",
log10.mass>2.75~"large")) %>%
ggplot(aes(x=mass_category, fill=trophic.guild))+
geom_bar(position="dodge")
summary(log10.hra)
homerange %>%
mutate(range_category=case_when(log10.hra<3.65~"very small",
log10.hra>=3.65 & log10.hra<=4.59~"small",
log10.hra>4.59 & log10.hra<=6.02~"medium",
log10.hra>6.02~"large")) %>%
ggplot(aes(x=range_category, fill=class))+
geom_bar(position="dodge", alpha=0.6, color="black")
gapminder %>%
filter(year>1952) %>%
group_by(country) %>%
ggplot(aes(x=country, y=pop))+
geom_col()+
theme(axis.text.x=element_text(size=1))+
coord_flip()
gapminder %>%
filter(year>1952) %>%
group_by(country) %>%
ggplot(aes(x=country, y=pop))+
geom_col()+
theme(axis.text.x=element_text(size=0.1))+
coord_flip()
gapminder %>%
filter(year>1952) %>%
group_by(country) %>%
ggplot(aes(x=country, y=pop))+
geom_col()+
theme(axis.text.x=element_text(size=5))+
coord_flip()
gapminder %>%
filter(year>1952) %>%
group_by(country) %>%
ggplot(aes(x=country, y=pop, fill=country))+
geom_col()+
theme(axis.text.x=element_text(size=5))+
coord_flip()
gapminder %>%
filter(year>1952) %>%
group_by(country) %>%
ggplot(aes(x=country, y=pop))+
geom_col()+
theme(axis.text.x=element_text(size=5))+
coord_flip()
gapminder %>%
filter(year>1952) %>%
group_by(country) %>%
ggplot(aes(x=country, y=pop))+
geom_col()+
theme(axis.text.x=element_text(size=0.02))+
coord_flip()
gapminder %>%
ggplot(aes(x=gdpPercap, y=lifeExp, color=continent))+
geom_jitter()+
geom_point()
gapminder %>%
ggplot(aes(x=gdpPercap, y=lifeExp, color=continent))+
geom_jitter()+
geom_point()+
labs(title = "Relationship Between Per Capita GDP and Life Expactancy")
gapminder %>%
filter(year>1952) %>%
group_by(country)
gapminder %>%
filter(year>1952) %>%
group_by(country)
gapminder %>%
filter(year>1952) %>%
group_by(country) %>%
arrange(desc(pop))
gapminder %>%
filter(year>1952) %>%
count(country) %>%
arrange(desc(pop))
gapminder %>%
filter(year>1952) %>%
group_by(country) %>%
arrange(desc(pop))
gapminder %>%
filter(year>1952) %>%
group_by(country)
gapminder %>%
filter(year>1952) %>%
count(country)
gapminder %>%
filter(year>1952) %>%
count(country) %>%
arrange(desc(pop))
gapminder %>%
filter(year>1952) %>%
count(country) %>%
select(country,pop) %>%
arrange(desc(pop))
gapminder %>%
filter(year>1952) %>%
count(country) %>%
select(country,pop)
gapminder %>%
filter(year>1952) %>%
count(country) %>%
arrange(desc(pop))
gapminder %>%
filter(year>1952) %>%
count(country) %>%
arrange(desc(pop))
gapminder %>%
filter(year>1952) %>%
group_by(country) %>%
arrange(desc(pop))
gapminder %>%
filter(year>1952) %>%
count(country)
gapminder %>%
filter(year>1952) %>%
count(country) %>%
arrange(pop)
gapminder %>%
filter(year>1952) %>%
count(country) %>%
arrange(desc(pop))
gapminder %>%
filter(year>1952) %>%
count(country) %>%
arrange(desc(n))
gapminder %>%
filter(year>1952) %>%
count(country)
gapminder %>%
filter(year>1952) %>%
count(country) %>%
select(country, year, pop)
gapminder %>%
filter(year>1952) %>%
select(country, year, pop)
gapminder %>%
filter(year>1952) %>%
select(country, year, pop) %>%
group_by(country)
gapminder %>%
filter(year>1952) %>%
select(country, year, pop) %>%
group_by(country) %>%
arrange(desc(pop))
gapminder %>%
filter(year>1952) %>%
select(country, year, pop) %>%
group_by(country) %>%
arrange(desc(pop)) %>%
top_n(10)
gapminder %>%
filter(year>1952) %>%
group_by(country) %>%
ggplot(aes(x=country, y=pop))+
geom_col()+
theme(axis.text.x=element_text(size=0.02))+
coord_flip()
gapminder %>%
filter(year>1952, country= "China", "Indonesia") %>%
select(country, year, pop) %>%
group_by(country)
gapminder %>%
filter(year>1952, country= "China") %>%
select(country, year, pop) %>%
group_by(country)
gapminder %>%
filter(year>1952, country= "China")
gapminder %>%
filter(year>1952, country== "China",country== "India", country== "United States",country== "Indonesia", country== "Brazil"  )
top_five<-gapminder %>%
filter(year>1952, country== "China",country== "India", country== "United States",country== "Indonesia", country== "Brazil")
gapminder %>%
ggplot(x=top_five, y=pop)
top_five<-gapminder %>%
filter(year>1952, country== "China",country== "India", country== "United States",country== "Indonesia", country== "Brazil")
top_five<-gapminder %>%
filter(year>1952, country== "China",country== "India", country== "United States",country== "Indonesia", country== "Brazil") %>%
count(pop)
gapminder %>%
filter(year>1952, country== "China",country== "India", country== "United States",country== "Indonesia", country== "Brazil") %>%
count(pop)
top_five_1952<-gapminder %>%
filter(year>1952, country== "China",country== "India", country== "United States",country== "Indonesia", country== "Brazil") %>%
count(pop)
gapminder %>%
filter(year>1952, country== "China"| country== "India" | country== "United States"|country== "Indonesia"| country== "Brazil") %>%
ggplot(aes(x=year, y=pop))
gapminder %>%
filter(year>1952, country== "China"| country== "India" | country== "United States"|country== "Indonesia"| country== "Brazil") %>%
ggplot(aes(x=year, y=pop, color=country))
gapminder %>%
filter(country== "China"| country== "India" | country== "United States"|country== "Indonesia"| country== "Brazil") %>%
ggplot(aes(x=year, y=pop, color=country))
gapminder %>%
filter(country== "China"| country== "India" | country== "United States"|country== "Indonesia"| country== "Brazil") %>%
ggplot(aes(x=year, y=pop, color=country))+
geom_point()
gapminder %>%
filter(country== "China"| country== "India" | country== "United States"|country== "Indonesia"| country== "Brazil") %>%
ggplot(aes(x=year, y=pop, color=country))+
geom_line()
gapminder %>%
filter(year>1952, country== "China"| country== "India" | country== "United States"|country== "Indonesia"| country== "Brazil") %>%
ggplot(aes(x=year, y=pop, color=country))+
geom_line()
gapminder %>%
filter(year>1952, country== "China"| country== "India" | country== "United States"|country== "Indonesia"| country== "Brazil") %>%
ggplot(aes(x=year, y=gdpPercap, color=country))+
geom_line()
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
options(scipen=999) #cancels the use of scientific notation for the session
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\"))
p <- homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+
geom_bar(na.rm=T, position="dodge") #stored a plot as an object to play with aesthetics
p + theme_light()+
theme(axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
q <- homerange %>%
ggplot(aes(x=log10.mass, y=log10.preymass, color=taxon))+ #fill will not work on a scatter plot so you have to use color
geom_point(na.rm=T)
q+theme_classic()
q+theme_minimal()
p+theme_linedraw()+
theme(legend.position = "left",#adjust the legend to the bottom, top, left, right
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL, #x=null removes label name from x axis
y= "n",
fill= "Trophic Guild")
#install.packages("ggthemes")
library(ggthemes)
#ls("package:ggthemes")[grepl("theme_", ls("package:ggthemes"))]
p +
theme_economist()+ #theme matches a certain publications
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=0))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
p +
theme_igray()+ #theme matches a certain publications
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+ #hjust measures from x axis
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
?RColorBrewer
display.brewer.pal(10,"PuBu") #sequential palette
p+scale_fill_brewer(palette = "PuBu")+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
q+ scale_color_brewer(palette = "YlGnBu")+
theme(legend.position = "top",
axis.text.x = element_text(angle = 0, hjust=1))
colors <- paletteer::palettes_d_names
my_palette <- paletteer_d("basetheme::void") #this will store my palette, "add package and palette", make sure to match the length of colors with datasets
barplot(rep(1,6), axes=FALSE, col=my_palette)#show my palette
p+scale_fill_manual(values=my_palette)+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
q+theme_classic()+scale_color_manual(values=my_palette)
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 60, hjust=1))
p+scale_fill_brewer(palette = "PuBu")+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
facet_wrap(~trophic.guild)#split the trophic guild into two
theme(axis.text.x = element_text(angle = 60, hjust=1))
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
facet_grid(.~trophic.guild~thermoregulation)+#grid allows you to shape how you want it ".~" at thebeginning and at the end, added in thermoregulation
theme(axis.text.x = element_text(angle = 60, hjust=1))
gapminder %>%
filter(year>1952, country== "China"| country== "India" | country== "United States"|country== "Indonesia"| country== "Brazil") %>%
ggplot(aes(x=year, y=gdp, color=country))+
geom_line()
gapminder %>%
filter(year>1952, country== "China"| country== "India" | country== "United States"|country== "Indonesia"| country== "Brazil") %>%
ggplot(aes(x=year, y=gdpPercap, color=country))+
geom_line()
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
facet_wrap(~trophic.guild)#split the trophic guild into two
theme(axis.text.x = element_text(angle = 60, hjust=1))
names(gapminder)
gapminder %>%
ggplot(aes(x=year, y=lifeExp))+
geom_line()+
facet_wrap(~continent)#split the trophic guild into two
theme(axis.text.x = element_text(angle = 60, hjust=1))
